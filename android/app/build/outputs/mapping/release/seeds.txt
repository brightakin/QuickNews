com.facebook.react.bridge.JavaJSExecutor
androidx.browser.browseractions.BrowserActionsFallbackMenuView
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.jni.DestructorThread$Terminus
com.swmansion.reanimated.ReactNativeUtils$BorderRadii
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.bridge.JsonWriterHelper
com.facebook.react.bridge.UIManagerProvider
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec
com.facebook.react.bridge.DynamicFromMap
androidx.appcompat.widget.ActionBarContainer
com.facebook.common.internal.DoNotStrip
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.fabric.FabricUIManagerProviderImpl
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.jni.NativeRunnable
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping
com.facebook.react.fabric.mounting.mountitems.MountItemFactory
com.facebook.soloader.SysUtil$LollipopSysdeps
com.swmansion.reanimated.NativeProxy
com.facebook.react.bridge.NativeArray
com.facebook.react.modules.appstate.AppStateModule
com.facebook.yoga.YogaValue
com.facebook.react.fabric.events.EventBeatManager
com.facebook.jni.DestructorThread
org.pgsqlite.SQLitePlugin
com.swmansion.reanimated.AndroidUIScheduler$2
com.reactnativecommunity.webview.RNCWebViewModule
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.facebook.fbreact.specs.NativeAppearanceSpec
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsForViewManagerProvider
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.hermes.intl.DateTimeFormat
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.modules.network.NetworkingModule
androidx.lifecycle.LegacySavedStateHandleController$1
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.facebook.react.bridge.JSBundleLoader$4
com.swmansion.reanimated.keyboard.WindowsInsetsManager
com.swmansion.reanimated.layoutReanimation.AnimationsManager
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.swmansion.reanimated.keyboard.KeyboardState
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.bridge.JSBundleLoader
com.swmansion.reanimated.nativeProxy.NoopEventHandler
com.facebook.react.runtime.JSRuntimeFactory
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent
com.facebook.react.fabric.DevToolsReactPerfLogger
androidx.fragment.app.Fragment$5
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.bridge.InvalidIteratorException
com.facebook.jni.DestructorThread$DestructorList
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
com.facebook.react.bridge.ReactContext$1
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.modules.core.DeviceEventManagerModule
com.facebook.react.fabric.CoreComponentsRegistry
com.facebook.react.uimanager.ViewGroupManager
com.facebook.hermes.intl.Collator
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager
com.facebook.react.views.text.ReactTextAnchorViewManager
com.swmansion.reanimated.nativeProxy.NativeProxyCommon
com.facebook.jni.HybridData$Destructor
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
androidx.core.widget.NestedScrollView
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.modules.systeminfo.AndroidInfoModule
androidx.appcompat.widget.AlertDialogLayout
com.facebook.react.fabric.FabricUIManager$3
androidx.activity.ComponentActivity$3
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
com.facebook.react.fabric.FabricUIManager$1
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem
com.facebook.react.animated.NativeAnimatedModule
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion
com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.react.bridge.Promise
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider
com.facebook.jni.DestructorThread$DestructorStack
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.fabric.FabricUIManager$2
javax.inject.Provider
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod
com.facebook.react.bridge.JSInstance
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.react.modules.websocket.WebSocketModule
kotlinx.coroutines.android.AndroidDispatcherFactory
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.facebook.react.bridge.ReactMethod
com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder
com.facebook.react.runtime.BindingsInstaller
com.facebook.react.modules.blob.BlobModule
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.react.bridge.ReactIgnorableMountingException
com.facebook.react.fabric.EmptyReactNativeConfig$Companion
com.facebook.react.bridge.WritableMap
com.swmansion.reanimated.ReanimatedPackage
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.bridge.ReadableMapKeySetIterator
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.bridge.ActivityEventListener
com.facebook.yoga.YogaLogLevel
com.swmansion.reanimated.sensor.ReanimatedSensor
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.swmansion.reanimated.layoutReanimation.SharedElement
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.fabric.interop.UIBlockViewResolver
com.facebook.react.bridge.ReactMarkerConstants
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.react.modules.camera.ImageStoreManager
com.swmansion.reanimated.NodesManager$OnAnimationFrame
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.react.devsupport.InspectorFlags
com.facebook.react.modules.deviceinfo.DeviceInfoModule
org.reactnative.maskedview.RNCMaskedViewManager
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.facebook.proguard.annotations.DoNotStrip
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.facebook.react.bridge.Arguments
com.facebook.react.bridge.Callback
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.bridge.ReadableNativeMap
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.views.view.ReactViewManager
android.support.v4.graphics.drawable.IconCompatParcelizer
com.facebook.react.modules.blob.FileReaderModule
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.bridge.JavaScriptModule
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.runtime.BridgelessCatalystInstance
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.react.fabric.ReactNativeConfig
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.facebook.react.bridge.DynamicFromMap$1
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.react.bridge.ReadableNativeArray$1
com.facebook.react.bridge.Dynamic
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.devsupport.JSCHeapCapture
com.swmansion.reanimated.R
com.swmansion.reanimated.nativeProxy.EventHandler
com.swmansion.reanimated.NodesManager$1
com.facebook.react.bridge.NativeArrayInterface
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState
com.facebook.react.bridge.SoftAssertions
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.facebook.react.fabric.FabricUIManager$5
com.facebook.react.modules.devloading.DevLoadingModule
kotlin.jvm.internal.DefaultConstructorMarker
androidx.appcompat.widget.ViewStubCompat
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.react.views.text.ReactVirtualTextViewManager
com.oblador.vectoricons.VectorIconsModule
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl
com.facebook.react.modules.core.JavaTimerManager
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.views.progressbar.ReactProgressBarViewManager
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.facebook.react.bridge.JavaMethodWrapper$1
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.facebook.react.modules.core.TimingModule
com.reactnativecommunity.webview.RNCWebViewManager
com.facebook.react.bridge.JavaMethodWrapper$4
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.config.ReactFeatureFlags
com.facebook.react.bridge.RuntimeExecutor
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.facebook.jni.HybridClassBase
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.bridge.ReactContext
com.facebook.react.bridge.JSExceptionHandler
androidx.appcompat.widget.DialogTitle
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.react.modules.vibration.VibrationModule
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.jni.UnknownCppException
com.facebook.react.defaults.DefaultComponentsRegistry
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.facebook.react.bridge.OnBatchCompleteListener
com.th3rdwave.safeareacontext.SafeAreaViewManager
androidx.emoji2.text.EmojiCompatInitializer
com.facebook.fbreact.specs.NativeClipboardSpec
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.module.model.ReactModuleInfo
com.swmansion.reanimated.ReanimatedUIManagerFactory
com.facebook.soloader.SoLoader
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener
com.facebook.react.bridge.ReadableType
com.facebook.react.devsupport.HMRClient
androidx.startup.InitializationProvider
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.facebook.react.bridge.ColorPropConverter
com.facebook.imagepipeline.memory.NativeMemoryChunk
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.runtime.ReactInstance
com.facebook.react.bridge.JavaMethodWrapper$6
com.facebook.react.common.JavascriptException
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.bridge.ReadableMap
androidx.lifecycle.SavedStateHandleController
com.facebook.react.uimanager.ViewManager
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.facebook.react.jscexecutor.JSCExecutor
com.swmansion.reanimated.NodesManager$4
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation
com.facebook.react.runtime.hermes.HermesInstance
com.facebook.react.bridge.MemoryPressureListener
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.CallbackImpl
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.modules.statusbar.StatusBarModule
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.bridge.interop.InteropModuleRegistry
com.facebook.yoga.YogaNative
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.swmansion.reanimated.CopiedEvent$1
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.bridge.ReadableNativeMap$2
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.bridge.Systrace
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.facebook.react.bridge.JavaOnlyMap
com.facebook.react.bridge.ReactBridge
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.react.bridge.CatalystInstanceImpl$Builder
androidx.savedstate.Recreator
androidx.activity.result.ActivityResultRegistry$1
com.swmansion.reanimated.NativeProxy$1
com.facebook.react.modules.toast.ToastModule
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.swmansion.reanimated.keyboard.KeyboardAnimationManager
androidx.appcompat.widget.ContentFrameLayout
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.fabric.mounting.SurfaceMountingManager
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
com.facebook.react.fabric.LongStreamingStats
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.bridge.JavaOnlyMap$1
com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsProvider
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.react.views.image.ReactImageManager
com.facebook.react.bridge.queue.MessageQueueThread
com.swmansion.reanimated.BuildConfig
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint
com.facebook.react.uimanager.RootViewManager
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader
androidx.fragment.app.DialogFragment
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.quicknews.MainActivity
com.facebook.react.bridge.NativeArgumentsParseException
com.swmansion.reanimated.DevMenuUtils
com.facebook.jni.IteratorHelper
com.facebook.react.common.LifecycleState
com.facebook.react.bridge.ReactMarker
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.reactnativecommunity.webview.RNCWebViewMessagingModule
com.facebook.react.uimanager.ComponentNameResolverManager
com.swmansion.reanimated.NativeReanimatedModuleSpec
com.facebook.react.bridge.ReactContext$2
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.react.modules.permissions.PermissionsModule
com.swmansion.reanimated.ReactNativeUtils
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.swmansion.reanimated.MapUtils
androidx.appcompat.widget.ButtonBarLayout
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver
androidx.appcompat.view.menu.ActionMenuItemView
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.react.util.RCTLog
com.facebook.react.bridge.BaseJavaModule
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.swmansion.reanimated.ReanimatedMessageQueueThread
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.facebook.react.defaults.DefaultReactHostDelegate
com.facebook.jni.CppSystemErrorException
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.hermes.reactexecutor.HermesExecutor
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.bridge.JavaScriptExecutorFactory
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.jni.annotations.DoNotStripAny
com.facebook.react.uimanager.UIConstantsProviderManager
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface
androidx.core.app.CoreComponentFactory
com.facebook.soloader.DoNotOptimize
com.facebook.react.modules.dialog.DialogModule
com.facebook.yoga.YogaLogger
com.facebook.imagepipeline.platform.PreverificationHelper
com.swmansion.reanimated.AndroidUIScheduler
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.swmansion.reanimated.keyboard.Keyboard
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.facebook.react.bridge.CatalystInstance
com.swmansion.reanimated.ReanimatedModule
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.bridge.GuardedRunnable
com.facebook.fbreact.specs.NativeVibrationSpec
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.react.fabric.mounting.SurfaceMountingManager$4
androidx.appcompat.widget.Toolbar
com.facebook.react.fabric.SurfaceHandlerBinding$DisplayModeTypeDef
androidx.fragment.app.FragmentManager$6
com.facebook.jni.HybridData
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor
com.facebook.react.bridge.Inspector$LocalConnection
androidx.core.util.Pools$SimplePool
androidx.core.app.RemoteActionCompat
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem
com.facebook.react.fabric.internal.interop.InteropUIBlockListener
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.swmansion.reanimated.NodesManager$NativeUpdateOperation
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback
com.facebook.react.modules.share.ShareModule
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.bridge.JSONArguments
com.facebook.react.bridge.WritableArray
com.facebook.react.fabric.Binding
androidx.core.graphics.drawable.IconCompat
com.facebook.react.bridge.ReadableArray
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.fabric.GuardedFrameCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.react.devsupport.LogBoxModule
com.facebook.fbreact.specs.NativeTimingSpec
androidx.lifecycle.ProcessLifecycleInitializer
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.RuntimeScheduler
com.swmansion.reanimated.ReaCompatibility
com.swmansion.reanimated.NativeMethodsHelper
com.swmansion.reanimated.NodesManager$3
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.bridge.AssertionException
com.reactnativecommunity.netinfo.NetInfoModule
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.bridge.Arguments$2
com.swmansion.reanimated.CopiedEvent
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.react.common.futures.SimpleSettableFuture
com.swmansion.reanimated.Utils
com.facebook.react.bridge.PromiseImpl
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.react.bridge.Inspector$Page
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.react.fabric.mounting.LayoutMetricsConversions
com.facebook.react.bridge.NativeModule
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.facebook.react.uimanager.ReanimatedUIManager
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener
com.facebook.jni.MapIteratorHelper
com.facebook.react.bridge.MemoryPressure
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper
com.facebook.react.uimanager.SimpleViewManager
com.facebook.fbreact.specs.NativeRedBoxSpec
com.facebook.react.uimanager.UIConstantsProviderManager$DefaultEventTypesProvider
com.facebook.react.runtime.JSTimerExecutor
com.facebook.soloader.SysUtil$Api14Utils
com.facebook.react.bridge.ModuleHolder
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.yoga.annotations.DoNotStrip
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.react.fabric.FabricComponents
androidx.activity.ImmLeaksCleaner
com.facebook.hermes.intl.NumberFormat
com.facebook.fbreact.specs.NativeModalManagerSpec
com.swmansion.reanimated.NodesManager$2
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.react.views.text.ReactRawTextManager
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.bridge.BackgroundExecutor
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData
com.swmansion.reanimated.sensor.ReanimatedSensorType
com.facebook.react.devsupport.CxxInspectorPackagerConnection
com.facebook.hermes.intl.Intl
com.facebook.react.bridge.GuardedResultAsyncTask
com.facebook.react.bridge.JSIModulePackage
com.facebook.react.bridge.JSBundleLoader$5
androidx.versionedparcelable.ParcelImpl
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.swmansion.reanimated.nativeProxy.SensorSetter
com.BV.LinearGradient.LinearGradientManager
com.facebook.react.bridge.JavaModuleWrapper
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.react.bridge.JSBundleLoader$2
androidx.versionedparcelable.CustomVersionedParcelable
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.uimanager.BaseViewManager
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.bridge.UIManager
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.bridge.JSIModule
com.facebook.soloader.Api18TraceUtils
com.facebook.react.fabric.FabricUIManager$4
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.bridge.queue.MessageQueueThreadSpec
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
androidx.lifecycle.Lifecycling$1
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor
com.facebook.react.modules.intent.IntentModule
com.facebook.react.bridge.JSIModuleHolder
androidx.annotation.Keep
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.modules.sound.SoundManagerModule
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.jni.annotations.DoNotStrip
com.facebook.react.bridge.Inspector
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.jni.DestructorThread$1
com.facebook.react.internal.turbomodule.core.TurboModuleManager
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.bridge.Arguments$1
com.facebook.react.turbomodule.core.interfaces.TurboModule
androidx.appcompat.widget.SearchView
com.swmansion.reanimated.layoutReanimation.Snapshot
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.internal.interop.InteropEventEmitter
androidx.appcompat.app.AlertController$RecycleListView
androidx.appcompat.widget.ActionBarContextView
com.facebook.proguard.annotations.KeepGettersAndSetters
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.react.bridge.ReactApplicationContext
com.facebook.react.bridge.JSIModuleType
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.react.views.text.ReactTextViewManager
com.reactnativecommunity.webview.RNCWebViewFileProvider
com.quicknews.MainApplication
com.facebook.react.fabric.SurfaceHandlerBinding
com.swmansion.reanimated.AndroidUIScheduler$1
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
com.facebook.react.bridge.JSIModuleProvider
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.react.bridge.ReactCxxErrorHandler
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager
com.swmansion.reanimated.ReanimatedPackage$1
com.facebook.systrace.TraceListener
com.facebook.react.bridge.ReadableNativeMap$1$1
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.fbreact.specs.NativeImageEditorSpec
androidx.appcompat.widget.ActionMenuView
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.fabric.FabricUIManager
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.fabric.ReactNativeConfig$Companion
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.facebook.react.fabric.mounting.MountingManager
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.fabric.EmptyReactNativeConfig
com.facebook.react.bridge.NativeMap
com.facebook.react.fabric.BindingImpl
com.facebook.react.modules.blob.BlobCollector
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.react.bridge.DimensionPropConverter
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
com.facebook.react.bridge.UIManagerListener
com.facebook.react.fabric.interop.UIBlock
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.react.bridge.NoSuchKeyException
androidx.activity.ComponentActivity$5
com.swmansion.reanimated.sensor.ReanimatedSensorListener
com.swmansion.reanimated.sensor.ReanimatedSensorContainer
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
androidx.transition.FragmentTransitionSupport
com.swmansion.reanimated.NodesManager
com.facebook.jni.CppException
com.facebook.react.bridge.ModuleSpec
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.facebook.react.fabric.mounting.MountItemDispatcher
com.facebook.react.modules.clipboard.ClipboardModule
com.facebook.react.modules.image.ImageLoaderModule
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.core.app.RemoteActionCompatParcelizer
androidx.lifecycle.SavedStateHandleAttacher
androidx.activity.ComponentActivity$4
com.facebook.react.runtime.JSCInstance
com.facebook.jni.ThreadScopeSupport
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.fabric.ComponentFactory
com.facebook.react.bridge.WritableNativeArray
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.react.bridge.DefaultJSExceptionHandler
com.facebook.react.bridge.queue.MessageQueueThreadHandler
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.react.fabric.FabricSoLoader
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.react.common.mapbuffer.WritableMapBuffer
com.facebook.react.modules.core.JSTimers
com.facebook.react.bridge.JavaMethodWrapper$10
com.facebook.react.modules.appearance.AppearanceModule
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String NAME
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View mTransitionContainer
com.facebook.react.runtime.BindingsInstaller: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
com.facebook.react.fabric.BindingImpl: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_Y
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mAncestorsToRemove
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.util.HashMap sensors
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List afterUIBlocks
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInteropForAllTurboModules
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.facebook.react.fabric.FabricUIManager$4: int val$reactTag
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View targetView
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String NAME
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double interval
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_TOP_RIGHT_RADIUS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String WIDTH
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.config.ReactFeatureFlags: boolean enableClonelessStateProgression
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.facebook.react.bridge.Inspector$Page: int mId
com.facebook.react.fabric.mounting.MountingManager: int MAX_STOPPED_SURFACE_IDS_LENGTH
androidx.core.view.WindowInsetsAnimationCompat$Callback: android.view.WindowInsets mDispachedInsets
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String NAME
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_END
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState UNKNOWN
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider mLegacyModuleProvider
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.swmansion.reanimated.AndroidUIScheduler: java.lang.Runnable mUIThreadRunnable
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: java.lang.String mEventName
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingDiffStats
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_X
com.facebook.react.fabric.mounting.MountItemDispatcher: java.lang.String TAG
com.swmansion.reanimated.NodesManager: double lastFrameTimeMs
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.uimanager.events.EventDispatcher eventDispatcherOverride
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean initOk
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: java.util.concurrent.ConcurrentHashMap mListeners
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.ComponentNameResolverManager mComponentNameResolverManager
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManagerImpl mRNCWebViewManagerImpl
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
com.facebook.react.fabric.StateWrapperImpl: boolean mDestroyed
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
com.facebook.react.config.ReactFeatureFlags: boolean rejectTurboModulePromiseOnNativeError
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.swmansion.reanimated.sensor.ReanimatedSensorType: int type
com.swmansion.reanimated.layoutReanimation.Snapshot: com.swmansion.reanimated.ReactNativeUtils$BorderRadii borderRadii
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.facebook.react.fabric.ReactNativeConfig: com.facebook.react.fabric.ReactNativeConfig DEFAULT_CONFIG
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int mSurfaceId
org.pgsqlite.SQLitePlugin: android.content.Context context
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener this$1
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_STATE
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.sensor.ReanimatedSensorContainer reanimatedSensorContainer
com.swmansion.reanimated.BuildConfig: boolean IS_INTERNAL_BUILD
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.LifecycleEventListener mInitialURLListener
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE_DELETE_TREE
com.swmansion.reanimated.NodesManager$3: boolean val$trySynchronously
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.swmansion.reanimated.NodesManager: java.util.Set nativeProps
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.swmansion.reanimated.keyboard.WindowsInsetsManager: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorType sensorType
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.keyboard.KeyboardAnimationManager keyboardAnimationManager
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_INSERT
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int mReactTag
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.BuildConfig: java.lang.String BUILD_TYPE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String NAME
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider mTurboModuleProvider
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_LOCATIONS
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutCreateAnimation
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String NAME
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TRANSFORM_MATRIX
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mSurfaceId
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float full
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: long MAX_TIME_IN_FRAME
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy mNativeProxy
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: boolean mIsLayoutable
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
com.facebook.react.fabric.ReactNativeConfig$Companion: com.facebook.react.fabric.ReactNativeConfig$Companion $$INSTANCE
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.internal.interop.InteropUIBlockListener mInteropUIBlockListener
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_EVENT_EMITTER
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback mRemoveDeleteTreeUIFrameCallback
com.facebook.react.bridge.interop.InteropModuleRegistry: java.util.HashMap supportedModules
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] orientation
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String NAME
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.swmansion.reanimated.BuildConfig: java.lang.String REANIMATED_VERSION_JAVA
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String NAME
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long mCommitNumber
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mReactTag
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.facebook.react.fabric.mounting.SurfaceMountingManager: int mSurfaceId
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $VALUES
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.AmazonFireDeviceConnectivityPoller mAmazonConnectivityChecker
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.facebook.react.fabric.mounting.MountItemDispatcher: long mRunStartTime
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mSurfaceId
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jniSignature
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.facebook.react.config.ReactFeatureFlags: boolean useNativeViewConfigsInBridgelessMode
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.facebook.react.fabric.SurfaceHandlerBinding: int NO_SURFACE_ID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.facebook.react.fabric.mounting.MountingManager: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingTransactionEndStats
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_BORDER_RADII
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: int mEventCategory
com.swmansion.reanimated.NodesManager: java.util.Queue mOperationsInBatch
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.swmansion.reanimated.sensor.ReanimatedSensorListener: com.swmansion.reanimated.nativeProxy.SensorSetter setter
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.facebook.react.fabric.FabricUIManager$4: int val$initialReactTag
com.facebook.react.runtime.BindingsInstaller: com.facebook.react.runtime.BindingsInstaller$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Field mBorderRadiusField
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.swmansion.reanimated.NodesManager$1: int val$viewTag
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.swmansion.reanimated.sensor.ReanimatedSensor: int DEFAULT_INTERVAL
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.facebook.react.bridge.ReactMarker: java.util.Queue sNativeReactMarkerQueue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingSubviewCountMap
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
org.pgsqlite.SQLitePlugin: java.lang.String TAG
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion Companion
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: int mReactTag
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION_PROGRESS
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double lastRead
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedElementsLookup
com.facebook.react.fabric.mounting.MountItemDispatcher: int FRAME_TIME_MS
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: android.view.View mView
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String TAG
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float bottomLeft
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.util.ArrayList viewsToSnapshot
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_X
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
com.facebook.react.config.ReactFeatureFlags: boolean enableMountHooks
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String HEIGHT
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String NAME
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_HANDLE_FIELDS
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_START_POINT
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.lang.ref.WeakReference mWeakAndroidUIScheduler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String NAME
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.facebook.react.fabric.EmptyReactNativeConfig: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.Snapshot: float[] identityMatrix
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String NAME
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.swmansion.reanimated.keyboard.Keyboard: int mActiveTransitionCounter
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String NAME
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String NAME
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent val$viewEvent
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot targetViewSnapshot
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.UIConstantsProviderManager mUIConstantsProviderManager
com.facebook.react.fabric.mounting.MountItemDispatcher: int MAX_TIME_IN_FRAME_FOR_NON_BATCHED_OPERATIONS_MS
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int mNumRetries
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int ENTERING
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.react.config.ReactFeatureFlags: boolean enableTextSpannableCache
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mTagsToCleanup
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.facebook.react.runtime.JSTimerExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mIsStopped
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mEnteringViewTargetValues
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mMountItems
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.swmansion.reanimated.NodesManager$3: java.util.concurrent.Semaphore val$semaphore
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.ref.WeakReference mContext
com.swmansion.reanimated.NodesManager: java.util.concurrent.ConcurrentLinkedQueue mEventQueue
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
org.pgsqlite.SQLitePlugin: java.lang.String PLUGIN_NAME
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInterop
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isInvalidated
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithProgress
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.CopiedEvent: java.lang.String eventName
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_FLAG_MULTIPLE
com.swmansion.reanimated.BuildConfig: int EXOPACKAGE_FLAGS
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager parentViewManager
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
com.swmansion.reanimated.NodesManager$3: java.util.Queue val$copiedOperationsQueue
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.views.image.ReactImageView: float mBorderRadius
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mEventType
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String NAME
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: boolean mCanCoalesceEvent
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.fabric.ReactNativeConfig: com.facebook.react.fabric.ReactNativeConfig$Companion Companion
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PROPS
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: android.content.SharedPreferences mSharedPreferences
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginX
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] rotation
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ROTATION_VECTOR
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.facebook.react.fabric.EmptyReactNativeConfig: com.facebook.react.fabric.EmptyReactNativeConfig$Companion Companion
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.AndroidUIScheduler$2: com.swmansion.reanimated.AndroidUIScheduler this$0
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.UIManager mUIManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_CREATE
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: com.facebook.react.bridge.ReadableArray mCommandArgs
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitter
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int sHolderCount
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingLayoutStats
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.react.animated.EventAnimationDriver: java.lang.String mEventName
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_RADIUS
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_TOP_LEFT_RADIUS
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
org.pgsqlite.SQLitePlugin: java.util.concurrent.ExecutorService threadPool
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GRAVITY
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.List transformMatrix
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext mThemedReactContext
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.util.Map mPoints
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter mEventEmitter
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_Y
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Stack mReactTagsToRemove
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int mCounter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutUpdateAnimation
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.CopyOnWriteArrayList mStoppedSurfaceIds
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.Long firstUptime
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_OVERFLOW_INSET
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactContext mContext
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray mLayoutHandlers
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String NAME
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState OPEN
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
com.swmansion.reanimated.layoutReanimation.Snapshot: int height
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager viewManager
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.Sensor sensor
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.swmansion.reanimated.keyboard.WindowsInsetsManager: java.lang.ref.WeakReference mReactContext
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int mReactTag
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float bottomRight
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_X
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mCommitNumber
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_TRANSFORM_MATRIX
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String mComponent
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean SHOW_CHANGED_VIEW_HIERARCHIES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.UIManager mUIManager
com.BV.LinearGradient.LinearGradientManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.util.Map sComponentNames
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mRemovedSharedViews
com.facebook.react.animated.EventAnimationDriver: int mViewTag
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginY
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_CONSOLE_PATCH_SETTINGS
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.bridge.ReadableMap mProps
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState val$viewState
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionParent
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long mMarkerTime
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int mSurfaceId
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float topLeft
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.swmansion.reanimated.NodesManager: boolean $assertionsDisabled
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList currentKeysToTransform
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.common.GestureHandlerStateManager gestureHandlerStateManager
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.swmansion.reanimated.AndroidUIScheduler: java.util.concurrent.atomic.AtomicBoolean mActive
com.facebook.react.config.ReactFeatureFlags: boolean calculateTransformedFramesEnabled
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE_CENTER
com.swmansion.reanimated.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.swmansion.reanimated.NodesManager: boolean mTryRunBatchUpdatesSynchronously
com.swmansion.reanimated.NodesManager$2: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_DELETE
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String cppVersion
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String NAME
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mSurfaceId
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] quaternion
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String SHARED_PREFERENCES_PREFIX
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_TRANSFORM_MATRIX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.swmansion.reanimated.layoutReanimation.Snapshot: int originX
com.swmansion.reanimated.keyboard.Keyboard: int CONTENT_TYPE_MASK
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean mShouldAnimateLayout
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_LAYOUT
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String methodName
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mIntBufferLen
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.util.Queue mPendingEventQueue
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_USE_ANGLE
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionInParentIndex
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_VISIBLE
com.facebook.jni.CppSystemErrorException: int errorCode
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate mDelegate
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String NAME
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsTryingToCreate
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String NAME
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String NAME
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: boolean mIsRoot
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRendererExclusively
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_WIDTH
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.ReactStylesDiffMap mCurrentProps
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String NAME
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_BOTTOM_RIGHT_RADIUS
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mAddedSharedViews
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager mReanimatedNativeHierarchyManager
com.facebook.react.config.ReactFeatureFlags: boolean unstable_enableTurboModuleSyncVoidMethods
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitterWrapper
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler mAndroidUIScheduler
org.pgsqlite.SQLitePlugin: java.util.concurrent.ConcurrentHashMap dbrmap
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: com.facebook.react.bridge.WritableMap mParams
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.UIManager mFabricUIManager
com.facebook.react.fabric.FabricUIManager$1: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.keyboard.Keyboard: int SYSTEM_BAR_TYPE_MASK
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState CLOSED
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.fabric.ComponentFactory mComponentFactory
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.SensorManager sensorManager
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSnapshotRegistry
com.facebook.react.fabric.FabricUIManager$4: int val$surfaceId
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.facebook.react.bridge.ReactMarkerConstants: boolean mHasMatchingNameMarker
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String NAME
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureNewCreateReloadDestroy
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.Map mModuleHolders
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithAnimation
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.ConnectivityReceiver mConnectivityReceiver
com.facebook.react.fabric.FabricUIManager$4: boolean val$blockNativeResponder
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int mModuleId
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.swmansion.reanimated.sensor.ReanimatedSensor: int interval
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.List mDevToolsReactPerfLoggerListeners
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mErroneouslyReaddedReactTags
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList targetKeysToTransform
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_DISABLE_ANIMATIONS
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int LAYOUT
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_BOTTOM_RIGHT_RADIUS
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.facebook.react.fabric.GuardedFrameCallback: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mRootViewAttached
com.swmansion.reanimated.ReanimatedModule: java.lang.String NAME
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mWeakAnimationsManager
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.ConcurrentHashMap mSurfaceIdToManager
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map val$reactModuleInfoMap
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.ViewGroup parent
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View sourceView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_X
org.pgsqlite.SQLitePlugin: java.util.regex.Pattern FIRST_WORD
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List beforeUIBlocks
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.swmansion.reanimated.NodesManager$1: java.lang.String val$commandId
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.swmansion.reanimated.ReanimatedPackage$1: com.swmansion.reanimated.ReanimatedPackage this$0
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String TAG
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int mEventType
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String NAME
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.facebook.react.uimanager.NativeViewHierarchyManager: android.widget.PopupMenu mPopupMenu
com.swmansion.reanimated.NodesManager$3: com.swmansion.reanimated.NodesManager this$0
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PADDING
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String NAME
com.swmansion.reanimated.CopiedEvent: int targetTag
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap mTagToViewState
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mPreMountItems
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: boolean isSoLibraryLoaded
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
com.facebook.react.fabric.FabricComponents: java.util.Map sComponentNames
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_TOP_RIGHT_RADIUS
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.lang.String TAG
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_HIDDEN
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jsiReturnKind
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingViews
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_PROFILING_SETTINGS
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState OPENING
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long mTimeStamp
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsDoneCreatingModule
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsMountingEnabled
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_TOP_RIGHT_RADIUS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String NAME
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.Map mFabricCommitMarkers
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View view
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricUIManager$3: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int nextSensorId
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String mMarkerName
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_SUSPENDED
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_Y
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.lang.Object mModuleCleanupLock
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String NAME
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Queue mOnViewAttachMountItems
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.atomic.AtomicBoolean mMountNotificationScheduled
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadImpl messageQueueThread
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState CLOSING
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mViewTagsToHide
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.facebook.react.runtime.JSRuntimeFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedViewChildrenIndices
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_X
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_BOTTOM_RIGHT_RADIUS
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.swmansion.reanimated.NodesManager$1: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ACCELEROMETER
com.swmansion.reanimated.NodesManager$1: com.facebook.react.bridge.ReadableArray val$commandArgs
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.swmansion.reanimated.NativeProxy$1: java.lang.ref.WeakReference val$weakLayoutAnimations
com.facebook.react.fabric.LongStreamingStats: int len
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: java.lang.ref.WeakReference mOuter
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.facebook.react.bridge.WritableMap mNativeProps
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.lang.ref.WeakReference reactContext
com.facebook.react.fabric.StateWrapperImpl: java.lang.String TAG
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.Object[] mObjBuffer
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.fabric.mounting.SurfaceMountingManager: androidx.collection.SparseArrayCompat mTagSetForStoppedSurface
com.swmansion.reanimated.AndroidUIScheduler$1: com.swmansion.reanimated.AndroidUIScheduler this$0
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorListener listener
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable mCompletionRunnable
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager mSharedTransitionManager
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mLastQueriedSurfaceMountingManager
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GYROSCOPE
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String TAG
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap cleanerCallback
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean mInitialized
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_Y
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.swmansion.reanimated.keyboard.WindowsInsetsManager: com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction mNotifyAboutKeyboardChange
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.bridge.ReactContext reactContext
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_COLORS
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mDefaultEventEmitter
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_TOP_LEFT_RADIUS
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_X
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.swmansion.reanimated.nativeProxy.SensorSetter: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricUIManager$2: int val$reactTag
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot sourceViewSnapshot
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_START
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String NAME
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction mNotifyAboutKeyboardChange
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean mIsTransitionPrepared
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_Y
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_AFFECTED_NODES
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.fabric.ReactNativeConfig mConfig
com.swmansion.reanimated.NodesManager: java.util.Set uiProps
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.ReaCompatibility compatibility
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.swmansion.reanimated.BuildConfig: int REACT_NATIVE_MINOR_VERSION
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.events.RCTEventEmitter mCustomEventHandler
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] $VALUES
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModuleImpl mRNCWebViewModuleImpl
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int mSurfaceId
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mViewCommandMountItems
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int mReactTag
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.fabric.LongStreamingStats: long max
com.swmansion.reanimated.layoutReanimation.Snapshot: int originYByParent
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_TOP_LEFT_RADIUS
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_END_POINT
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long mMaxAnimationDuration
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.fabric.mounting.MountItemDispatcher: int mReDispatchCounter
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: com.facebook.react.bridge.ReadableArray mCommandArgs
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutDeleteAnimation
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricSoLoader: boolean sDidInit
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mObjBufferLen
com.swmansion.reanimated.BuildConfig: boolean DEBUG
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String NAME
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: int mNextListenerId
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: com.swmansion.reanimated.keyboard.WindowsInsetsManager mWindowsInsetsManager
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap payload
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mCurrentSharedTransitionViews
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: long FRAME_TIME_MS
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
com.swmansion.reanimated.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
com.swmansion.reanimated.layoutReanimation.Snapshot: int width
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useFabricInterop
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureSoftExceptions
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean mInDispatch
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.GuardedFrameCallback mChoreographerCallback
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Method getCornerRadiiMethod
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: int jsArgCount
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_RADIUS
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_WIDTH
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION
com.facebook.react.fabric.mounting.MountItemDispatcher: long mBatchedExecutionTime
com.swmansion.reanimated.NodesManager$4: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.NodesManager: java.util.List mFrameCallbacks
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.lang.ref.WeakReference mWeakNativeViewHierarchyManager
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener mItemDispatchListener
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.fabric.LongStreamingStats: java.util.Queue maxHeap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_START
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int EXITING
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
com.reactnativecommunity.netinfo.NetInfoModule: int numberOfListeners
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType MAGNETIC_FIELD
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String NAME
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.facebook.react.fabric.LongStreamingStats: java.util.Queue minHeap
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_HEIGHT
com.swmansion.reanimated.keyboard.KeyboardState: int mValue
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElements
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.react.fabric.FabricUIManager$5: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mCallbacks
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mReactTag
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingCommitStats
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_HEIGHT
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.ViewManager mViewManager
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float topRight
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mDisableCleaningForViewTag
com.swmansion.reanimated.Utils: boolean isChromeDebugger
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.react.fabric.LongStreamingStats: double streamingAverage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.swmansion.reanimated.keyboard.Keyboard: int mHeight
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mReattachedViews
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String NAME
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.facebook.react.config.ReactFeatureFlags: boolean excludeYogaFromRawProps
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean mModuleCleanupStarted
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mEnteringViews
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.swmansion.reanimated.keyboard.Keyboard: com.swmansion.reanimated.keyboard.KeyboardState mState
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationManager
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.interop.InteropModuleRegistry mInteropModuleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.facebook.react.config.ReactFeatureFlags: boolean unstable_bridgelessArchitectureMemoryPressureHackyBoltsFix
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.swmansion.reanimated.keyboard.WindowsInsetsManager: boolean mIsStatusBarTranslucent
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mContext
com.swmansion.reanimated.layoutReanimation.Snapshot: int originY
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mCommandId
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.bridge.ReadableMap val$props
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: int mViewTag
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.facebook.react.uimanager.UIConstantsProviderManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.bridge.ReadableMap mCurrentLocalData
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int[] mIntBuffer
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String NAME
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.facebook.react.config.ReactFeatureFlags: boolean traceTurboModulePromiseRejections
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.NodesManager mNodesManager
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean slowAnimationsEnabled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.devsupport.interfaces.DevLoadingViewManager mDevLoadingViewManager
com.swmansion.reanimated.layoutReanimation.Snapshot: int originXByParent
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_HANDLE_RESOURCES
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_RADIUS
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String NAME
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: int CONTENT_TYPE_MASK
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingBatchExecutionStats
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: java.util.List val$mountItems
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext mContext
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap toBeRemoved
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.BatchEventDispatchedListener mBatchEventDispatchedListener
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.fabric.FabricUIManager$4: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String mCommandId
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.swmansion.reanimated.NativeReanimatedModuleSpec: java.lang.String NAME
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mMostRecentSurfaceMountingManager
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_Y
com.swmansion.reanimated.NodesManager: java.util.concurrent.atomic.AtomicBoolean mCallbackPosted
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
com.swmansion.reanimated.sensor.ReanimatedSensorListener: android.view.Display display
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void invalidate()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
org.pgsqlite.SQLitePlugin: java.util.concurrent.ExecutorService getThreadPool()
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.facebook.jni.HybridData getHybridData()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String getName()
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromFile(java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void willMountItems(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void lambda$updateInsets$1(int,int)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: void run(android.view.View)
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.fabric.FabricUIManager: void addUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.runtime.ReactInstance: void registerSegmentNative(int,java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void clearAnimationConfigForTag(int)
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$incrementPendingJSCalls$4()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.swmansion.reanimated.nativeProxy.SensorSetter: void sensorSetter(float[],int)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.facebook.react.bridge.ReactMarker: void notifyNativeMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.Long)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.DevToolsReactPerfLogger: boolean isFabricCommitMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.reactnativecommunity.webview.RNCWebViewManager: void setForceDarkOn(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.fabric.FabricUIManager$1: FabricUIManager$1(com.facebook.react.fabric.FabricUIManager)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String getName()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.swmansion.reanimated.NodesManager: void performOperations()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void incrementPendingJSCalls()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.react.bridge.UiThreadUtil: boolean runOnUiThread(java.lang.Runnable,long)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.EmptyReactNativeConfig: boolean getBool(java.lang.String)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $values()
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerEnforced(int,java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.BV.LinearGradient.LinearGradientView: void setBorderRadii(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void clear(com.facebook.react.bridge.Callback)
com.BV.LinearGradient.LinearGradientManager: com.BV.LinearGradient.LinearGradientView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getUiMessageQueueThread()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.bridge.DynamicFromMap: int asInt()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setGestureState(int,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void invalidate()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void logViewHierarchy(android.view.ViewGroup,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int subscribeForKeyboardEvents(com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper,boolean)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void dismissPopupMenu()
com.BV.LinearGradient.LinearGradientManager: void setColors(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
org.reactnative.maskedview.RNCMaskedViewManager: void removeAllViews(android.view.View)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.facebook.hermes.intl.Intl: Intl()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.facebook.react.modules.websocket.WebSocketModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: DevToolsSettingsManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String obtainProp(int,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.facebook.react.fabric.StateWrapperImpl: void updateState(com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: void initialize()
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void checkDuplicateSharedTag(int,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: NativeAsyncStorageModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTreeForTags(int[],com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.facebook.react.bridge.Dynamic: int asInt()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: void run(android.view.View)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: NativeProxyCommon(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: boolean install()
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: SharedTransitionManager$SnapshotTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List getSharedElementsForCurrentTransition(java.util.List,boolean)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderWidth()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableMicrotasks()
com.swmansion.reanimated.NodesManager: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean androidEnablePendingFabricTransactions()
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager$2: FabricUIManager$2(com.facebook.react.fabric.FabricUIManager,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.swmansion.reanimated.NodesManager: boolean isAnimationRunning()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setRole(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.AndroidUIScheduler$2: void runGuarded()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int getSurfaceId()
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void quitSynchronous()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: InteropUIBlockListener()
com.facebook.react.fabric.LongStreamingStats: double getMedian()
com.swmansion.reanimated.layoutReanimation.Snapshot: void addCurrentConfig(java.util.HashMap)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void installJSIBindings(boolean,boolean)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.react.internal.interop.InteropEventEmitter: InteropEventEmitter(com.facebook.react.bridge.ReactContext)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.drawee.view.DraweeView: java.lang.Object getExtraData()
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.View,android.view.View,int)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.react.fabric.BindingImpl: BindingImpl()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.bridge.Dynamic: void recycle()
com.swmansion.reanimated.NodesManager: void configureProps(java.util.Set,java.util.Set)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeViewAt(int,int,int)
com.facebook.jni.HybridData$Destructor: void destruct()
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void logError(java.lang.String)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderBottomRightRadius(float)
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.runtime.JSTimerExecutor: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
org.pgsqlite.SQLitePlugin: void executeSqlBatch(java.lang.String,java.lang.String[],com.facebook.react.bridge.ReadableArray[],java.lang.String[],org.pgsqlite.CallbackContext)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void incrementRetries()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: float getMaxSize(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sendAccessibilityEvent(int,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addViewAt(int,int,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
com.facebook.react.devsupport.InspectorFlags: InspectorFlags()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.fabric.BindingImpl: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long,int)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void checkDuplicateSharedTag(android.view.View)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.SurfaceHandlerBinding: SurfaceHandlerBinding(java.lang.String)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableSpannableBuildingUnification()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void requestRender(com.swmansion.reanimated.nativeProxy.AnimationFrameCallback)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.ReanimatedModule: void invalidate()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void closeQuietly()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didMountItems(java.util.List)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void reset()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.uimanager.ViewManager,boolean)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.swmansion.reanimated.layoutReanimation.SharedElement: SharedElement(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.fabric.EmptyReactNativeConfig: long getInt64(java.lang.String)
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setClick(android.view.View,boolean)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getName()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void removeAllViews(android.view.View)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsRecursive(android.view.View)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.swmansion.reanimated.AndroidUIScheduler: AndroidUIScheduler(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl,com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.facebook.react.fabric.BindingImpl: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig)
com.facebook.react.fabric.BindingImpl: void unregister()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View findTransformedView(android.view.View)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void installJSIBindings()
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeDeleteTreeAt(int,int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.facebook.react.bridge.ReactBridge: void staticInit()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getHasBorderRadii()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.facebook.react.bridge.CatalystInstance: void setFabricUIManager(com.facebook.react.bridge.UIManager)
com.facebook.react.runtime.BindingsInstaller: BindingsInstaller(com.facebook.jni.HybridData)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String getName()
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.reactnativecommunity.webview.RNCWebView: void setHasScrollEvent(boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void endCreatingModule()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateLayout(int,int,int,int,int,int,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: void run()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.swmansion.reanimated.NodesManager: void scrollTo(int,double,double,boolean)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: int subscribeForKeyboardUpdates(com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext getContext()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.facebook.react.modules.intent.IntentModule: void invalidate()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void endLayoutAnimation(int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: float getMinSize(int)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addBasicConfig(java.util.HashMap)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getAffectedLayoutNodesCount()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Response lambda$sendRequestInternal$0(java.lang.String,com.facebook.react.bridge.ReactApplicationContext,int,okhttp3.Interceptor$Chain)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.react.runtime.ReactInstance: long getJavaScriptContext()
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void dropGestureHandler(double)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.StateWrapperImpl: void destroyState()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,long)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void setHighlightedElementsRectangles(java.util.List)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: java.lang.String getName()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.modules.devloading.DevLoadingModule: void hide()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unregisterSensor(int)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didDispatchMountItems()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean isLayoutAnimationEnabled()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.fabric.Binding: void unregister()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactContext: void initializeInteropModules()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: void run()
com.facebook.react.fabric.mounting.MountingManager: long measure(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.UIManager: void invalidate()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.react.views.textinput.ReactTextInputManager: boolean lambda$addEventEmitters$1(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ThemedReactContext,android.widget.TextView,int,android.view.KeyEvent)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String getName()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.swmansion.reanimated.NodesManager: void enqueueUpdateViewOnNativeThread(int,com.facebook.react.bridge.WritableMap,boolean)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getConsolePatchSettings()
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: int lambda$sortViewsByTags$0(android.view.View,android.view.View)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.bridge.Dynamic: boolean isNull()
com.th3rdwave.safeareacontext.SafeAreaView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.swmansion.reanimated.BuildConfig: BuildConfig()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String getName()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int registerSensor(com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.mounting.MountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.BindingImpl: void stopSurface(int)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String getMarkerName()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItems(long)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getTurboJavaModule(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion()
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableNativeArray)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.swmansion.reanimated.DevMenuUtils: DevMenuUtils()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
com.facebook.react.fabric.FabricUIManager$2: java.lang.String toString()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.swmansion.reanimated.ReanimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.react.ReactRootView: void setIsFabric(boolean)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.modules.dialog.DialogModule: void invalidate()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String getName()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.fabric.FabricUIManager$3: void runGuarded()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void makeSnapshot(android.view.View)
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.facebook.react.fabric.BindingImpl: void driveCxxAnimations()
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean destroyFabricSurfacesInReactInstanceManager()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void prepareLayoutAnimations(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.reactnativecommunity.webview.RNCWebView: void setInjectedJavaScriptObject(java.lang.String)
com.facebook.react.fabric.ReactNativeConfig$Companion: ReactNativeConfig$Companion()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
org.pgsqlite.SQLitePlugin: void executeSqlBatch(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.fabric.interop.UIBlock: void execute(com.facebook.react.fabric.interop.UIBlockViewResolver)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJniSignature(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: FabricUIManager$MountItemDispatchListener(com.facebook.react.fabric.FabricUIManager)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void enqueuePendingEvent(int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.swmansion.reanimated.NodesManager$2: void doFrameGuarded(long)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.react.fabric.DevToolsReactPerfLogger: DevToolsReactPerfLogger()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean shouldAnimateLayout(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableMap copyReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
com.facebook.react.views.scroll.ReactScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.views.debuggingoverlay.DebuggingOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View getTransitioningView(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
com.facebook.jni.HybridData: void resetNative()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onViewsRemoval(int[])
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getLegacyJavaModule(java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.swmansion.reanimated.keyboard.Keyboard: com.swmansion.reanimated.keyboard.KeyboardState getState()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dismissPopupMenu()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.facebook.react.fabric.BindingImpl: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableBackgroundExecutor()
com.facebook.jni.HybridData: boolean isValid()
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void setWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraints(int,int,int,int,boolean,boolean,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.swmansion.reanimated.nativeProxy.EventHandler: EventHandler(com.facebook.jni.HybridData)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.Collection getAndResetPreMountItems()
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitEnd()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onScreenWillDisappear()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnScroll(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$2(com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
com.facebook.react.bridge.JavaOnlyArray: int size()
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.fabric.LongStreamingStats: long lambda$new$0(java.lang.Long)
com.facebook.yoga.YogaNative: void jni_YGNodeFinalizeJNI(long)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String getName()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderTopLeftRadius(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.swmansion.reanimated.NodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
com.reactnativecommunity.webview.RNCWebViewMessagingModule: void onMessage(com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: NativeDevToolsSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
org.reactnative.maskedview.RNCMaskedViewManager: org.reactnative.maskedview.RNCMaskedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
com.swmansion.reanimated.Utils: float convertToFloat(java.lang.Object)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.CatalystInstance: void initialize()
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean destroyFabricSurfacesInReactInstanceManager()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.swmansion.reanimated.NativeMethodsHelper: void scrollTo(android.view.View,double,double,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void decrementPendingJSCalls()
androidx.core.os.TraceCompat$Api18Impl: void endSection()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: long getAnimationTimestamp()
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: KeyboardAnimationManager(java.lang.ref.WeakReference)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.mounting.MountingManager: void clearJSResponder()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void registerExitingAncestors(android.view.View)
com.facebook.react.devsupport.InspectorFlags: boolean getEnableModernCDPRegistry()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void reparentSharedViewsForCurrentTransition(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager startSurface(int,com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderTopLeftRadius()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffStart()
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.swmansion.reanimated.NodesManager: void invalidate()
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopLeftRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: ReactNativeUtils$BorderRadii(float,float,float,float,float)
com.facebook.react.fabric.mounting.MountItemDispatcher: MountItemDispatcher(com.facebook.react.fabric.mounting.MountingManager,com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,java.lang.Long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.BindingImpl: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFixForClippedSubviewsCrash()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context,int)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void flushOperations()
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.BV.LinearGradient.LinearGradientView: void setUseAngle(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.DevToolsReactPerfLogger: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.swmansion.reanimated.ReaCompatibility: void registerFabricEventListener(com.swmansion.reanimated.NodesManager)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.oblador.vectoricons.VectorIconsModule: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.BV.LinearGradient.LinearGradientView: void setAngleCenter(com.facebook.react.bridge.ReadableArray)
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String getName()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.mounting.MountingManager: MountingManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.facebook.react.modules.core.TimingModule: void initialize()
org.pgsqlite.SQLitePlugin: com.facebook.react.bridge.WritableMap executeSqlStatementQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,com.facebook.react.bridge.ReadableArray,org.pgsqlite.CallbackContext)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
com.swmansion.reanimated.ReanimatedMessageQueueThread: ReanimatedMessageQueueThread()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.NativeProxy: void performOperations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void updateWindowDecor(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.facebook.jni.NativeRunnable: void run()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void updateProps(int,java.util.Map)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebView)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager: int getSurfaceId()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String toString()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.reactnativecommunity.webview.RNCWebViewManager: void setLackPermissionToDownloadMessage(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void dropView(android.view.View)
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String getName()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.fabric.mounting.mountitems.BatchMountItem: boolean isBatchEmpty()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
org.pgsqlite.SQLitePlugin: void createFromAssets(java.lang.String,java.io.File,java.io.InputStream)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.animated.NativeAnimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutStart()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutNewView(android.view.View)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.uimanager.ViewManager)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String getName()
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean androidEnablePendingFabricTransactions()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setAndroidUIScheduler(com.swmansion.reanimated.AndroidUIScheduler)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.facebook.react.fabric.EmptyReactNativeConfig: com.facebook.jni.HybridData initHybrid()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.swmansion.reanimated.sensor.ReanimatedSensor: void cancel()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findScreen(android.view.View)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.facebook.react.defaults.DefaultComponentsRegistry$Companion: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void makeSnapshotOfTopScreenViews(android.view.ViewGroup)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutDuration()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.WritableArray: void pushNull()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.swmansion.reanimated.ReanimatedMessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.reactnativecommunity.webview.RNCWebViewManager: void setDownloadingMessage(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.internal.interop.InteropEventEmitter: void overrideEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.fabric.BindingImpl: com.facebook.jni.HybridData initHybrid()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.AndroidUIScheduler,com.swmansion.reanimated.layoutReanimation.LayoutAnimations,com.facebook.react.bridge.queue.MessageQueueThread,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.fabric.BindingImpl: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int getSurfaceId()
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.react.fabric.FabricComponents: java.lang.String getFabricComponentName(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void initialize()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$decrementPendingJSCalls$5()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.NodesManager: void postOnAnimation(com.swmansion.reanimated.NodesManager$OnAnimationFrame)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForView(int)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void addDevMenuOption()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsProtectedMedia(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableFixForClippedSubviewsCrash()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List getBeforeUIBlocks$ReactAndroid_release()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandlerHelper(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getBorderColor()
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.swmansion.reanimated.NodesManager: float[] measure(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderTopRightRadius(float)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.fragment.app.DialogFragment: DialogFragment()
com.swmansion.reanimated.Utils: int[] processIntArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetViewCommandMountItems()
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isStopped()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldRouteTurboModulesThroughLegacyModuleInterop()
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnOpenWindowEvent(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: NativeRNGestureHandlerModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setRole(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.animated.NativeAnimatedModule)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.BV.LinearGradient.LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutEnd()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes[] values()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.react.bridge.DimensionPropConverter: DimensionPropConverter()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
com.facebook.react.views.scroll.ReactScrollViewManager: void setIsInvertedVirtualizedList(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$1(com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int findPrecedingViewTagForTransition(int)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper(com.facebook.jni.HybridData)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void screenDidLayout(android.view.View)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: void unregisterSensor(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadStart()
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(float)
com.reactnativecommunity.webview.RNCWebViewManager: void setMenuCustomItems(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetMountItems()
com.facebook.react.bridge.ReactContext: void initializeInteropModules(com.facebook.react.bridge.ReactContext)
com.BV.LinearGradient.LinearGradientManager: void setBorderRadii(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageView: void getCornerRadii(float[])
com.facebook.react.fabric.mounting.MountingManager: void sendAccessibilityEvent(int,int,int)
com.facebook.react.fabric.GuardedFrameCallback: void doFrameGuarded(long)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion: com.facebook.jni.HybridData initHybrid(java.util.List)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.fabric.LongStreamingStats: void add(long)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: DispatchIntCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getRunStartTime()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getDefaultEventEmitter()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.pgsqlite.SQLitePlugin: SQLitePlugin(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: void onAnimationFrame(double)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.reactnativecommunity.netinfo.NetInfoModule: NetInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.MountingManager: void attachRootView(int,android.view.View,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
com.facebook.react.bridge.ReactContext: void internal_registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.react.fabric.SurfaceHandlerBinding: void setProps(com.facebook.react.bridge.NativeMap)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void printSurfaceState()
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $values()
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void preallocateView(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void startCreatingModule()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: boolean isBatchEmpty()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.View)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData getHybridData()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(com.reactnativecommunity.webview.RNCWebViewWrapper)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: boolean haveExceededNonBatchedFrameTime(long)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.swmansion.reanimated.ReanimatedPackage: ReanimatedPackage()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.graphics.Point convertScreenLocationToViewCoordinates(android.graphics.Point,android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.ReanimatedUIManagerFactory: com.facebook.react.uimanager.UIManagerModule create(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.facebook.react.uimanager.UIConstantsProviderManager: void installJSIBindings()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int getSurfaceId()
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface: void remove()
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: AnimationFrameCallback(com.facebook.jni.HybridData)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus[] values()
com.swmansion.reanimated.AndroidUIScheduler$1: void run()
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: ReanimatedSensorContainer(java.lang.ref.WeakReference)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.swmansion.reanimated.NativeProxy$1: void startAnimation(int,int,java.util.HashMap)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void clearAnimationConfig(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebViewWrapper)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor: void run(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void removeAllViews(android.view.View)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertClassToJniType(java.lang.Class)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void invalidate()
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.facebook.react.views.scroll.ReactScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.swmansion.reanimated.nativeProxy.SensorSetter: SensorSetter(com.facebook.jni.HybridData)
com.facebook.react.fabric.Binding: void reportMount(int)
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String getName()
com.facebook.react.devsupport.HMRClient: void disable()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.reactnativecommunity.webview.RNCWebView: boolean getMessagingEnabled()
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int)
com.swmansion.reanimated.NodesManager: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction: void call()
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
androidx.lifecycle.ReportFragment: ReportFragment()
com.facebook.react.fabric.mounting.MountItemDispatcher: void printMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,java.lang.String)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.ReactInstanceManager getReactInstanceManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.reanimated.NativeMethodsHelper: com.facebook.react.views.scroll.ReactScrollView findScrollView(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderWidth(android.view.View,float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getNullableViewState(int)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.interfaces.fabric.SurfaceHandler,android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void removeAllViews(android.view.View)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.facebook.react.bridge.Arguments$1: int size()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String toString()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: PreAllocateViewMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String getName()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.facebook.react.fabric.FabricUIManager$4: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.swmansion.reanimated.NodesManager: void onAnimationFrame(long)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$1(android.view.View,int,int)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
org.pgsqlite.SQLitePlugin: boolean execute(java.lang.String,com.facebook.react.bridge.ReadableMap,org.pgsqlite.CallbackContext)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUnique(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableCustomDrawOrderFabric()
com.facebook.react.bridge.GuardedRunnable: void run()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: void access$setSoLibraryLoaded$cp(boolean)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.quicknews.MainApplication: MainApplication()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitStart()
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: FabricUIManager$DispatchUIFrameCallback(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: boolean isKeyboardAnimation(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.drawee.view.GenericDraweeView: void setInflateHierarchyListener(com.facebook.drawee.view.GenericDraweeView$InflateHierarchyListener)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean hasAnimation(int,int)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.jni.DestructorThread$1: void run()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.NativeMethodsHelper: float[] measure(android.view.View)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
org.pgsqlite.SQLitePlugin: void deleteDatabase(java.lang.String,org.pgsqlite.CallbackContext)
com.facebook.react.fabric.FabricUIManager: void lambda$static$0(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.swmansion.reanimated.CopiedEvent: int getTargetTag()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void removeAllViews(android.view.View)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.jni.IteratorHelper: boolean hasNext()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getCounter(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.reactnativecommunity.webview.RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$0(android.view.View,int,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutRemovedView(android.view.View)
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.JavaScriptModule getInteropModule(java.lang.Class)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.ReactRootView: int getRootViewTag()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItemForInterop(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean commonTestFlag()
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
org.pgsqlite.SQLitePlugin: void bindRow(com.facebook.react.bridge.WritableMap,java.lang.String,android.database.Cursor,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.swmansion.reanimated.NodesManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactMarker: void nativeLogMarker(java.lang.String,long)
com.facebook.react.fabric.Binding: void stopSurface(int)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: TurboModuleInteropUtils$MethodDescriptor(java.lang.String,java.lang.String,java.lang.String,int)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unsubscribeFromKeyboardEvents(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableBackgroundExecutor()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.fbreact.specs.NativeAppearanceSpec: void setColorScheme(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesMessageQueueThread()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.facebook.react.uimanager.BaseViewManager: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void stopObservingChanges()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void removeAllViews(android.view.View)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.reactnativecommunity.webview.RNCWebViewManager: void setSetDisplayZoomControls(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.facebook.react.fabric.mounting.mountitems.MountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void invalidate()
com.swmansion.reanimated.ReanimatedModule: java.lang.String getName()
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
com.facebook.react.uimanager.RootViewManager: void removeAllViews(android.view.View)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.swmansion.reanimated.NativeProxy: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder createNativeMethodsHolder(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
org.reactnative.maskedview.RNCMaskedViewManager: RNCMaskedViewManager()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler getAndroidUIScheduler()
com.facebook.react.runtime.ReactSurfaceView: android.graphics.Point getViewportOffset()
com.facebook.react.modules.dialog.DialogModule: void initialize()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.jni.HybridClassBase: HybridClassBase()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startPreparedTransitions()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: java.lang.String toString()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: void doFrameGuarded(long)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isIdle()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void scrollTo(int,double,double,boolean)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JSONArguments: JSONArguments()
com.facebook.react.views.modal.ReactModalHostView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
androidx.appcompat.widget.SearchView: int getInputType()
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.NativeProxy$1: int findPrecedingViewTagForTransition(int)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.facebook.react.bridge.NativeModule$-CC: boolean $default$canOverrideExistingModule(com.facebook.react.bridge.NativeModule)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableMicrotasks()
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setupTransitionContainer()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactMarker: ReactMarker()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunning()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean shouldAnimateExiting(int,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $values()
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: LayoutAnimations(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: NativeMethodCallInvokerHolderImpl(com.facebook.jni.HybridData)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandlerHelper(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderWidth(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedTransition(java.util.List,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.reactnativecommunity.webview.RNCWebViewManager: void setNestedScrollEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: void notifyAboutKeyboardChange()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: SurfaceMountingManager$PendingViewEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,boolean)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.facebook.react.fabric.FabricUIManager$4: FabricUIManager$4(com.facebook.react.fabric.FabricUIManager,int,int,int,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.fabric.EmptyReactNativeConfig$Companion: EmptyReactNativeConfig$Companion()
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.String getBorderStyle()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void lambda$addEventEmitters$0(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText,android.view.View,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.swmansion.reanimated.ReanimatedModule: void lambda$willDispatchViewUpdates$0(java.util.ArrayList,com.facebook.react.fabric.interop.UIBlockViewResolver)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void onViewStateDeleted(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.swmansion.reanimated.NativeProxy: NativeProxy(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.fabric.EmptyReactNativeConfig: double getDouble(java.lang.String)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.react.bridge.DimensionPropConverter: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void disableCleaningForViewTag(int)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
org.pgsqlite.SQLitePlugin: void startDatabase(java.lang.String,com.facebook.react.bridge.ReadableMap,org.pgsqlite.CallbackContext)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptObject(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.facebook.react.bridge.UiThreadUtil: boolean runOnUiThread(java.lang.Runnable)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $values()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: float getYogaSize(float,float)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addViewCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.swmansion.reanimated.NodesManager$1: NodesManager$1(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean inspectorEnableModernCDPRegistry()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.reactnativecommunity.webview.RNCWebView: void setMenuCustomItems(java.util.List)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState valueOf(java.lang.String)
com.facebook.react.fabric.FabricComponents: FabricComponents()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager$1: void executeItems(java.util.Queue)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.NativeProxy$1: void cancelAnimation(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleSetJSResponder(double,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener$-CC: void $default$logFabricMarker(com.facebook.react.bridge.ReactMarker$FabricMarkerListener,com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void setTraceUpdates(java.util.List)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFixForClippedSubviewsCrash()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getOrCreateModule(java.lang.String,com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder,boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.BaseReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.NativeViewHierarchyManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getViewState(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.NativeModule$-CC: void $default$onCatalystInstanceDestroy(com.facebook.react.bridge.NativeModule)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: androidx.core.view.WindowInsetsCompat onApplyWindowInsetsListener(android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
org.pgsqlite.SQLitePlugin: void attachDatabase(java.lang.String,java.lang.String,java.lang.String,org.pgsqlite.CallbackContext)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactContext: void onHostPause()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setWebviewDebuggingEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid(java.util.List)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.swmansion.reanimated.NativeMethodsHelper: void computeBoundingBox(android.view.View,int[])
com.facebook.react.bridge.NativeModule: void initialize()
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean checkReactFeatureFlagsConditions()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String getName()
com.swmansion.reanimated.NativeProxy$1: NativeProxy$1(java.lang.ref.WeakReference)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.runtime.BridgelessCatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didReceiveMessage(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void screenDidLayout(android.view.View)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType valueOf(java.lang.String)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.fabric.events.EventEmitterWrapper: void destroy()
com.facebook.react.views.scroll.ReactScrollViewManager: void removeAllViews(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.yoga.YogaNative: void jni_YGConfigSetErrataJNI(long,int)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getBatchedExecutionTime()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.swmansion.reanimated.keyboard.Keyboard: int getHeight()
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableCustomDrawOrderFabric()
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableMap)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.react.bridge.CatalystInstance: void destroy()
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getEventNameResolver()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.BV.LinearGradient.LinearGradientManager: void setUseAngle(com.BV.LinearGradient.LinearGradientView,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void lambda$manageChildren$0(java.util.ArrayList,android.view.View,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod: java.lang.String getType()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
com.facebook.react.BaseReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
org.pgsqlite.SQLitePlugin: boolean executeAndPossiblyThrow(org.pgsqlite.SQLitePlugin$Action,com.facebook.react.bridge.ReadableMap,org.pgsqlite.CallbackContext)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String createInvokeExceptionMessage(java.lang.String)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleClearJSResponder()
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.fabric.GuardedFrameCallback: void doFrame(long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean prepareSharedTransition(java.util.List,boolean)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.facebook.react.fabric.mounting.MountItemDispatcher: void executeOrEnqueue(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.swmansion.reanimated.NativeProxy$1: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String toString()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.facebook.yoga.YogaNative: void jni_YGNodeSetAlwaysFormsContainingBlockJNI(long,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setColors(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.reactnativecommunity.webview.RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
org.pgsqlite.SQLitePlugin: java.lang.String getName()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.facebook.react.fabric.mounting.MountingManager: void stopSurface(int)
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NodesManager: NodesManager(com.facebook.react.bridge.ReactContext)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.widget.FrameLayout$LayoutParams getLayoutParams(int,int)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData initHybrid(java.lang.String,java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetSupportMultipleWindows(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.facebook.react.fabric.SurfaceHandlerBinding: void stop()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: ReactNativeFeatureFlagsCxxInterop()
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.facebook.react.fabric.FabricUIManager$5: java.lang.String toString()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
androidx.startup.InitializationProvider: InitializationProvider()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.facebook.react.fabric.StateWrapperImpl: java.lang.String toString()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int registerSensor(int,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.reactnativecommunity.webview.RNCWebViewManager: void setSetBuiltInZoomControls(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertReturnClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean inspectorEnableModernCDPRegistry()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.reanimated.sensor.ReanimatedSensorType: ReanimatedSensorType(java.lang.String,int,int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$1()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean haveExceededNonBatchedFrameTime(long)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.swmansion.reanimated.keyboard.Keyboard: void updateHeight(androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: int getRootViewNum()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$0()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext getContext()
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.reactnativecommunity.netinfo.NetInfoModule: void initialize()
com.facebook.react.BaseReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
com.swmansion.reanimated.MapUtils: int getInt(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void clearAnimationConfigRecursive(android.view.View)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.reactnativecommunity.webview.RNCWebView: com.reactnativecommunity.webview.RNCWebViewClient getRNCWebViewClient()
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.facebook.react.fabric.EmptyReactNativeConfig$Companion: EmptyReactNativeConfig$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.facebook.react.modules.intent.IntentModule: void waitForActivityAndGetInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String getName()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int findPrecedingViewTagForTransition(int)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateOverflowInset(int,int,int,int,int)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: void handleEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.reanimated.ReanimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.lang.String toString()
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setMinimumFontSize(com.reactnativecommunity.webview.RNCWebViewWrapper,int)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.facebook.react.bridge.Dynamic: double asDouble()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.String toString()
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.facebook.react.bridge.DynamicFromObject: int asInt()
org.pgsqlite.SQLitePlugin$Action: org.pgsqlite.SQLitePlugin$Action valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String getName()
com.reactnativecommunity.webview.RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: CatalystInstanceImpl$InstanceCallback(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceId(int)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.react.bridge.UIManagerListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean shouldAnimateExiting(int,boolean)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.swmansion.reanimated.MapUtils: java.lang.String getString(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.reanimated.CopiedEvent: CopiedEvent(com.facebook.react.uimanager.events.Event)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy getNativeProxy()
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean getIsReducedMotion()
com.BV.LinearGradient.LinearGradientView: void setLocations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean getViewExists(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void orderByAnimationTypes(java.util.List)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewManager: void removeAllViews(android.view.View)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
kotlin.collections.AbstractList: AbstractList()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $values()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObjectString(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createPreAllocateViewMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.swmansion.reanimated.NodesManager: void startUpdatingOnAnimationFrame()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.swmansion.reanimated.NodesManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: void invoke(int,int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetGapJNI(long,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean tryStartSharedTransitionForViews(java.util.List,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didMountItems(com.facebook.react.bridge.UIManager)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean isLayoutAnimationEnabled()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void progressLayoutAnimation(int,java.util.Map,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.internal.interop.InteropUIBlockListener getInteropUIBlockListener()
com.swmansion.reanimated.NativeProxy$1: boolean hasAnimation(int,int)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getBufferedRuntimeExecutor()
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: void maybeLoadSoLibrary()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void stop()
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void enableCleaningForViewTag(int)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean isLayoutAnimationDisabled()
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.runtime.ReactInstance: void handleMemoryPressureJs(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.react.bridge.UIManagerListener: void willMountItems(com.facebook.react.bridge.UIManager)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
org.pgsqlite.SQLitePlugin: org.pgsqlite.SQLitePlugin$QueryType getQueryType(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
org.pgsqlite.SQLitePlugin$Action: org.pgsqlite.SQLitePlugin$Action[] values()
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean commonTestFlag()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.fabric.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.JSExceptionHandler)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType valueOf(java.lang.String)
com.facebook.react.uimanager.UIConstantsProviderManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.uimanager.UIConstantsProviderManager$DefaultEventTypesProvider,com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsForViewManagerProvider,com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsProvider)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setLetterSpacing(com.facebook.react.views.text.ReactTextView,float)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableArray copyReadableArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate(com.facebook.jni.HybridData)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setCppVersion(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.view.View resolveView(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.NativeReanimatedModuleSpec: java.lang.String getName()
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean inspectorEnableModernCDPRegistry()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems(java.util.Queue)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffDuration()
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void attachGestureHandler(double,double,double)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void updateInsets(int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType getInstanceById(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ReactModalHostManager: void removeAllViews(android.view.View)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int getSurfaceId()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didMountItems(java.util.List)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int getRetries()
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.util.Set convertProps(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: CxxInspectorPackagerConnection$WebSocketDelegate(com.facebook.jni.HybridData)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.reactnativecommunity.webview.RNCWebView: android.webkit.WebChromeClient getWebChromeClient()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.quicknews.MainActivity: MainActivity()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.BV.LinearGradient.LinearGradientManager: java.lang.String getName()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.fabric.mounting.SurfaceMountingManager: android.view.View getView(int)
com.facebook.react.fabric.DevToolsReactPerfLogger: void removeDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.reactnativecommunity.netinfo.NetInfoModule: void onAmazonFireDeviceConnectivityChanged(boolean)
com.facebook.react.modules.websocket.WebSocketModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.JSIModule: void initialize()
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(int,okhttp3.ResponseBody)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void prependUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.reactnativecommunity.netinfo.NetInfoModule: void addListener(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedAnimationForView(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void connect()
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveAllChildrenJNI(long)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.NativeMethodsHelper: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.bridge.JavaJSExecutor: void close()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$stopSurface$1()
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: FabricNameComponentMapping()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.facebook.react.fabric.mounting.MountingManager: boolean surfaceIsStopped(int)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.facebook.react.fabric.FabricSoLoader: FabricSoLoader()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager$3: FabricUIManager$3(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForViewEnforced(int)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.swmansion.reanimated.NativeProxy$1: boolean isLayoutAnimationEnabled()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void finishSharedAnimation(int)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: ReanimatedSensorListener(com.swmansion.reanimated.nativeProxy.SensorSetter,double,android.view.Display)
org.pgsqlite.SQLitePlugin: void close(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String getName()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: WindowsInsetsManager(java.lang.ref.WeakReference,com.swmansion.reanimated.keyboard.Keyboard,com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void toggleSlowAnimations()
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int getSurfaceId()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.swmansion.reanimated.NodesManager: void initWithContext(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean isLegacyModule(java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.View)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.facebook.react.fabric.mounting.MountingManager: boolean isWaitingForViewAttach(int)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: DevToolsReactPerfLogger$FabricCommitPoint(int)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
com.facebook.react.runtime.hermes.HermesInstance: com.facebook.jni.HybridData initHybrid(java.lang.Object)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.facebook.react.fabric.mounting.MountingManager: boolean getViewExists(int)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.facebook.react.fabric.FabricUIManager$4: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useModernRuntimeScheduler()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManager(int)
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.swmansion.reanimated.NodesManager: java.lang.String obtainProp(int,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.interfaces.fabric.SurfaceHandler,android.content.Context,android.view.View)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.swmansion.reanimated.NodesManager$1: void runGuarded()
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setProfilingSettings(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.runtime.hermes.HermesInstance$Companion: com.facebook.jni.HybridData initHybrid(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.facebook.react.fabric.mounting.MountItemDispatcher: void tryDispatchMountItems()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: boolean isOnThread()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void viewDidLayout(android.view.View)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String getName()
org.pgsqlite.SQLitePlugin$QueryType: org.pgsqlite.SQLitePlugin$QueryType[] values()
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler: void reportJsException(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableSpannableBuildingUnification()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.swmansion.reanimated.keyboard.Keyboard: void onAnimationEnd()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeRegisterSharedView(android.view.View)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.facebook.react.fabric.FabricUIManager$5: FabricUIManager$5(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager$2: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void lambda$updateWindowDecor$0(boolean)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.R: R()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: NativeModuleSoLoader()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.EmptyReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setProfilingSettings(java.lang.String)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap getPayload()
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: DispatchStringCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.Utils: Utils()
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.react.fabric.LongStreamingStats: LongStreamingStats()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getProfilingSettings()
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean batchRenderingUpdatesInEventLoop()
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor: void executeItems(java.util.Queue)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: SharedTransitionManager(com.swmansion.reanimated.layoutReanimation.AnimationsManager)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.NodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(java.lang.String,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.views.text.ReactTextView: void setLetterSpacing(float)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.react.fabric.LongStreamingStats: double getAverage()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.swmansion.reanimated.AndroidUIScheduler$1: AndroidUIScheduler$1(com.swmansion.reanimated.AndroidUIScheduler)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
org.pgsqlite.SQLitePlugin: void closeDatabaseNow(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatch(java.lang.String,com.facebook.react.bridge.WritableMap,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getName()
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] values()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: TurboModuleInteropUtils()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderBottomLeftRadius(float)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void addUIBlock(com.facebook.react.fabric.interop.UIBlock)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.swmansion.reanimated.ReanimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.swmansion.reanimated.AndroidUIScheduler: void triggerUI()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: int getJsArgCount(java.lang.String,java.lang.String,java.lang.Class[])
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.internal.interop.InteropEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean destroyFabricSurfacesInReactInstanceManager()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String getName()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setFontSize(com.facebook.react.views.text.ReactTextView,float)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$0(java.lang.String)
com.facebook.react.fabric.BindingImpl: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int getModuleId()
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.reactnativecommunity.netinfo.NetInfoModule: void onCatalystInstanceDestroy()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void progressLayoutAnimation(int,java.util.Map,boolean)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArray(org.json.JSONArray)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void lambda$deleteView$0(com.facebook.react.uimanager.events.Event)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNewProps(java.util.Map,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.uimanager.ViewManager,java.lang.Integer,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getJSMessageQueueThread()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.swmansion.reanimated.ReaCompatibility: ReaCompatibility(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$addRootView$0(android.view.View)
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes valueOf(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableMicrotasks()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void registerEventHandler(com.swmansion.reanimated.nativeProxy.EventHandler)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderStyle(android.view.View,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean batchRenderingUpdatesInEventLoop()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isLayoutAnimationEnabled()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map getReactModuleInfos()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.reactnativecommunity.webview.RNCWebViewManager: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableBackgroundExecutor()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableCustomDrawOrderFabric()
com.swmansion.reanimated.NodesManager: void onHostResume()
com.facebook.react.fabric.SurfaceHandlerBinding: void start()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.jni.DestructorThread$Destructor: void destruct()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.view.Window getWindow()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.bridge.NativeModule: void invalidate()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didClose()
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(double)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.facebook.react.runtime.ReactSurfaceView: int getUIManagerType()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: NoopEventHandler()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long getTimeStamp()
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.reactnativecommunity.webview.RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.facebook.react.internal.interop.InteropEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
org.pgsqlite.SQLitePlugin$QueryType: org.pgsqlite.SQLitePlugin$QueryType valueOf(java.lang.String)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void lambda$new$0(java.lang.Exception)
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.views.scroll.ReactScrollView: void setContentOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager getReanimatedNativeHierarchyManager()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
org.pgsqlite.SQLitePlugin: void echoStringValue(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: NodesManager$NativeUpdateOperation(com.swmansion.reanimated.NodesManager,int,com.facebook.react.bridge.WritableMap)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.facebook.react.fabric.mounting.mountitems.MountItem: int getSurfaceId()
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.events.EventEmitterWrapper: boolean isValid()
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState[] values()
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createSendAccessibilityEventMountItem(int,int,int)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.MountingManager: long measureMapBuffer(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.reanimated.AndroidUIScheduler$2: AndroidUIScheduler$2(com.swmansion.reanimated.AndroidUIScheduler,com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.facebook.react.fabric.LongStreamingStats: int lambda$new$1(java.lang.Long,java.lang.Long)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.FabricUIManager$5: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean removeOrAnimateExitRecursive(android.view.View,boolean,boolean)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String)
com.swmansion.reanimated.NodesManager$3: void runGuarded()
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void onBatchComplete()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffEnd()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutViewsRemoval(int[])
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
org.pgsqlite.SQLitePlugin: void delete(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void willMountItems(java.util.List)
com.reactnativecommunity.webview.RNCWebView: void setNestedScrollEnabled(boolean)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(int,long)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.reactnativecommunity.webview.RNCWebView$RNCWebViewBridge: java.lang.String injectedObjectJson()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void endMarkers()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.swmansion.reanimated.NodesManager: void registerEventHandler(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String getName()
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomRightRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updatePadding(int,int,int,int,int)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.BV.LinearGradient.LinearGradientManager: void setLocations(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setConsolePatchSettings(java.lang.String)
com.facebook.react.fabric.FabricUIManager$5: int getSurfaceId()
com.facebook.react.fabric.Binding: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.Inspector$Page: int getId()
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean shouldReturnInteropModule(java.lang.Class)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.interop.UIBlockViewResolver: android.view.View resolveView(int)
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.UiThreadUtil: android.os.Handler getUiThreadHandler()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $values()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.facebook.react.fabric.DevToolsReactPerfLogger: void addDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.react.fabric.mounting.MountingManager: void enqueuePendingEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.swmansion.reanimated.ReanimatedModule: boolean installTurboModule(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void doSnapshotForTopScreenViews(android.view.ViewGroup)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: TurboModuleManager$ModuleHolder()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.BV.LinearGradient.LinearGradientView: void setAngle(float)
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.swmansion.reanimated.NodesManager: void onHostPause()
com.facebook.react.fabric.mounting.SurfaceMountingManager: SurfaceMountingManager(int,com.facebook.react.touch.JSResponderHandler,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.devsupport.InspectorFlags: boolean getEnableCxxInspectorPackagerConnection()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.camera.ImageStoreManager)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean hasAnimationForTag(int,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String getReanimatedJavaVersion()
com.reactnativecommunity.webview.RNCWebViewMessagingModule: void onShouldStartLoadWithRequest(com.facebook.react.bridge.WritableMap)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didDispatchMountItems()
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void startAnimation(int,int,java.util.HashMap)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: AnimationsManager(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.fabric.FabricSoLoader: void staticInit()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.SurfaceHandlerBinding: void setMountable(boolean)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType[] values()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean shouldRouteTurboModulesThroughLegacyModuleInterop()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderColor(java.lang.Integer)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List getAfterUIBlocks$ReactAndroid_release()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.view.View getRootView()
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getAffectedLayoutNodesCountTime()
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] values()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.AndroidUIScheduler: void scheduleTriggerOnUI()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] values()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.facebook.jni.DestructorThread: DestructorThread()
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.reactnativecommunity.webview.RNCWebView: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.CopiedEvent: java.lang.String getEventName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
org.pgsqlite.SQLitePlugin: boolean deleteDatabaseNow(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toBasicMap()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void maybeInit()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void invalidate()
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useModernRuntimeScheduler()
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.swmansion.reanimated.ReanimatedModule: void lambda$willDispatchViewUpdates$1(java.util.ArrayList,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void maybeRestartAnimationWithNewLayout(android.view.View)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderBottomLeftRadius()
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.reactnativecommunity.webview.RNCWebView: void setSendContentSizeChangeEvents(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.runtime.ReactSurfaceView: void setIsFabric(boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void printSubTree(android.view.View,int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.bridge.CatalystInstanceImpl: void setFabricUIManager(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List drainConcurrentItemQueue(java.util.concurrent.ConcurrentLinkedQueue)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArrayString(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void resetPerfStats()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: SurfaceMountingManager$4(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState,com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.facebook.drawee.view.DraweeView: void setExtraData(java.lang.Object)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(double,double,double)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getProfilingSettings()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.swmansion.reanimated.ReanimatedUIManagerFactory: ReanimatedUIManagerFactory()
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.reflect.Method[] getMethodsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.sensor.ReanimatedSensor: boolean initialize()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String toString()
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus valueOf(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsProvider: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: IntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceId()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.fabric.FabricUIManager$2: int getSurfaceId()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.swmansion.reanimated.ReactNativeUtils: ReactNativeUtils()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.swmansion.reanimated.sensor.ReanimatedSensorType: int getType()
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void sendEventToAllConnections(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.swmansion.reanimated.keyboard.KeyboardState: int asInt()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.swmansion.reanimated.NativeProxy$1: void clearAnimationConfig(int)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionEnd()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.bridge.interop.InteropModuleRegistry: void registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: SendAccessibilityEvent(int,int,int)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.NodesManager$2: NodesManager$2(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getConsolePatchSettings()
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleName()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String getName()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void removeAllViews(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: boolean access$isSoLibraryLoaded$cp()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setAndroidLayerType(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void doFrameGuarded(long)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void startObservingChanges(com.swmansion.reanimated.keyboard.KeyboardAnimationCallback,boolean)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.views.textinput.ReactEditText: void setLineHeight(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createViewUnsafe(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: void invalidate()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.facebook.react.uimanager.BaseViewManager: void setTransformOrigin(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.facebook.react.views.textinput.ReactTextInputManager: void setLineHeight(com.facebook.react.views.textinput.ReactEditText,int)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setConsolePatchSettings(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.fabric.EmptyReactNativeConfig: EmptyReactNativeConfig()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.interfaces.fabric.SurfaceHandler)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.bridge.interop.InteropModuleRegistry: InteropModuleRegistry()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeMountItemsOnViewAttach()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(com.reactnativecommunity.webview.RNCWebViewWrapper,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void receiveCommand(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.facebook.react.BaseReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.react.fabric.FabricUIManager$4: int getSurfaceId()
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.facebook.react.uimanager.NativeViewHierarchyManager: long getInstanceHandle(int)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableSpannableBuildingUnification()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void viewDidLayout(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean checkIfTopScreenHasHeader(android.view.ViewGroup)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isRootViewAttached()
com.swmansion.reanimated.NativeMethodsHelper: NativeMethodsHelper()
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.BV.LinearGradient.LinearGradientManager: void setAngleCenter(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean commonTestFlag()
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isIdle()
com.facebook.react.views.view.ReactViewManager: void setexperimental_layoutConformance(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void checkCppVersion()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
org.pgsqlite.SQLitePlugin: void bindArgsToStatement(android.database.sqlite.SQLiteStatement,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void install$lambda$2(com.swmansion.gesturehandler.react.RNGestureHandlerModule)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion: void maybeLoadSoLibrary()
org.pgsqlite.SQLitePlugin: android.database.sqlite.SQLiteDatabase getDatabase(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactEditText: void setPlaceholder(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.swmansion.reanimated.NodesManager$OnAnimationFrame: void onAnimationFrame(double)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setReanimatedNativeHierarchyManager(com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.swmansion.reanimated.ReanimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: SharedTransitionManager$PrepareConfigCleanupTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] $values()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.swmansion.reanimated.ReanimatedMessageQueueThread: boolean isIdle()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: MountItemFactory()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutScreenWillDisappear()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: SharedTransitionManager$TopWillAppearListener(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
kotlin.random.Random: Random()
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.swmansion.reanimated.DevMenuUtils: void addDevMenuOption(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.swmansion.reanimated.ReanimatedPackage$1: ReanimatedPackage$1(com.swmansion.reanimated.ReanimatedPackage,java.util.Map)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactTextView: void setFontSize(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toTargetMap()
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void setJSResponder(int,int,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderWidth(float)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionDuration()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.react.fabric.LongStreamingStats: long getMax()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle valueOf(java.lang.String)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void publicDropView(android.view.View)
com.swmansion.reanimated.NodesManager: void updateProps(int,java.util.Map)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: void unsubscribeFromKeyboardUpdates(int)
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
org.reactnative.maskedview.RNCMaskedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.ReadableNativeMap: void ensureKeysAreImported()
com.facebook.react.animated.NativeAnimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: void shouldStartLoadWithLockIdentifier(boolean,double)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.uimanager.LayoutShadowNode: void setGap(float)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.reactnativecommunity.netinfo.NetInfoModule: void getCurrentState(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,int,java.util.Map)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTimestamp(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderStyle(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void stopSurface()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.swmansion.reanimated.sensor.ReanimatedSensor: ReanimatedSensor(java.lang.ref.WeakReference,com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(double,boolean)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean enableSyncVoidMethods()
com.reactnativecommunity.webview.RNCWebView: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCBasicAuthCredential)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.facebook.react.runtime.ReactInstance: void callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: FabricUIManager$MountItemDispatchListener$1(com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener,java.util.List)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void invalidate()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.react.bridge.UIManager: void initialize()
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void clearAllSharedConfigsForView(android.view.View)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.swmansion.reanimated.NodesManager: void stopUpdatingOnAnimationFrame()
com.facebook.react.uimanager.UIConstantsProviderManager$DefaultEventTypesProvider: com.facebook.react.bridge.NativeMap getDefaultEventTypes()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.swmansion.reanimated.MapUtils: MapUtils()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: void dangerouslyReset()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.facebook.react.fabric.BindingImpl: void uninstallFabricUIManager()
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.ViewGroup)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.react.devsupport.LogBoxModule: void show()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.BV.LinearGradient.LinearGradientManager: LinearGradientManager()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.swmansion.reanimated.Utils: java.util.Map processMapping(com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionHandleColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: float[] measure(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addRootView(android.view.View)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.facebook.react.bridge.ReactBridge: ReactBridge()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: DevToolsReactPerfLogger$FabricCommitPointData(long,int)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.fabric.BindingImpl: void setPixelDensity(float)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String toString()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toCurrentMap()
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: DebuggingOverlayManager()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: SendAccessibilityEventMountItem(int,int,int)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTransactionEndDuration()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: void override(java.lang.Object)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.facebook.react.fabric.BindingImpl: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean dispatchMountItems()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean androidEnablePendingFabricTransactions()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.fabric.BindingImpl: void reportMount(int)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$onNativeException$6()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.swmansion.reanimated.NativeReanimatedModuleSpec: boolean installTurboModule(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebView: com.facebook.react.uimanager.ThemedReactContext getThemedReactContext()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: ReanimatedMessageQueueThreadBase()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String getName()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: void onEventDispatch(com.facebook.react.uimanager.events.Event)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation: void execute(com.swmansion.reanimated.NodesManager)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean inspectorEnableCxxInspectorPackagerConnection()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void updateLayout(android.view.View,com.facebook.react.uimanager.ViewManager,int,float,float,float,float,boolean)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addPreAllocateMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$initialize$3()
com.facebook.react.uimanager.ReanimatedUIManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void beginMarkers(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void lambda$finishSharedAnimation$1(android.view.ViewParent)
org.pgsqlite.SQLitePlugin: void closeAllOpenDatabases()
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopRightRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateState(int,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.View)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean inspectorEnableCxxInspectorPackagerConnection()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionStart()
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: KeyboardAnimationCallback(com.swmansion.reanimated.keyboard.Keyboard,com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setClickCapture(android.view.View,boolean)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitDuration()
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String getName()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getUnbufferedRuntimeExecutor()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromAssets(android.content.res.AssetManager,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObject(org.json.JSONObject)
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getTurboLegacyCxxModule(java.lang.String)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] values()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionEnd()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean shouldAnimateExiting(int,boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean hasAnimationForTag(int,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.facebook.react.bridge.JSIModule: void invalidate()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,int)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.ReactRootView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration[] values()
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_enableSyncVoidMethods()
com.swmansion.reanimated.ReaCompatibility: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int,int)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void flushOperations()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderTopRightRadius()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTree(android.view.View,com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
org.pgsqlite.SQLitePlugin: void attach(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.events.EventBeatManager: void onBatchEventDispatched()
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitNumber()
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void cancelAnimation(int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NativeProxy$1: void checkDuplicateSharedTag(int,int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.View,int)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void sortViewsByTags(java.util.List)
com.facebook.react.modules.network.NetworkingModule: void initialize()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.facebook.jni.HybridData: HybridData()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void updateLayout(int,int,int,int,int,int)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.animated.NativeAnimatedModule)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.ReactNativeUtils: com.swmansion.reanimated.ReactNativeUtils$BorderRadii getBorderRadii(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createView(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: KeyboardWorkletWrapper(com.facebook.jni.HybridData)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
com.facebook.react.runtime.JSTimerExecutor: void callIdleCallbacks(double)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.swmansion.reanimated.NodesManager$3: NodesManager$3(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,boolean,java.util.concurrent.Semaphore,java.util.Queue)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.bridge.DynamicFromObject: void recycle()
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findStack(android.view.View)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewWrapper: com.reactnativecommunity.webview.RNCWebView getWebView()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertParamClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int getCounter()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean inspectorEnableCxxInspectorPackagerConnection()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long getMarkerTime()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void attachRootView(android.view.View,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void removeView(android.view.View,android.view.ViewGroup)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addTargetConfig(java.util.HashMap)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.JSRuntimeFactory,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.runtime.JSTimerExecutor,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,com.facebook.react.runtime.BindingsInstaller,boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAccessibilityRole(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: ReactMarker$ReactMarkerRecord(java.lang.String,long)
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.swmansion.reanimated.keyboard.KeyboardState: KeyboardState(java.lang.String,int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean batchRenderingUpdatesInEventLoop()
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(com.th3rdwave.safeareacontext.SafeAreaViewEdges)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String getName()
com.swmansion.reanimated.NativeReanimatedModuleSpec: NativeReanimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void checkDuplicateSharedTag(int,int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean shouldEnableLegacyModuleInterop()
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] values()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void endLayoutAnimation(int,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void maybeFlushUIUpdatesQueue()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.fabric.FabricUIManager: void prependUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
com.facebook.react.uimanager.UIConstantsProviderManager: void staticInit()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void removeAllViews(android.view.View)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didFailWithError(java.util.OptionalInt,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.swmansion.reanimated.AndroidUIScheduler: void deactivate()
com.reactnativecommunity.webview.RNCWebView: void setMessagingEnabled(boolean)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.View)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
org.pgsqlite.SQLitePlugin: void closeQuietly(java.io.Closeable)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
org.pgsqlite.SQLitePlugin: void closeDatabase(java.lang.String,org.pgsqlite.CallbackContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
org.pgsqlite.SQLitePlugin: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.UiThreadUtil: void removeOnUiThread(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.swmansion.reanimated.Utils: java.lang.String simplifyStringNumbersList(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.devsupport.HMRClient: void enable()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int getSurfaceId()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: ReanimatedNativeHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.swmansion.reanimated.keyboard.Keyboard: Keyboard()
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.facebook.yoga.YogaNative: int jni_YGConfigGetErrataJNI(long)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.IViewGroupManager getViewGroupManager(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: void dispatch(com.facebook.react.fabric.events.EventEmitterWrapper)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: void addPoint(com.facebook.react.bridge.ReactMarkerConstants,com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
org.pgsqlite.SQLitePlugin: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,int,org.pgsqlite.CallbackContext)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useModernRuntimeScheduler()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void cancelAnimationForTag(int)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String getName()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.JSTimerExecutor createJSTimerExecutor()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.swmansion.reanimated.keyboard.Keyboard: void onAnimationStart()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void lambda$onBatchComplete$0(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean isTurboModule(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void deleteView(int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType[] values()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadEnd()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: LayoutAnimations$Types()
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJSIReturnKind(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.facebook.react.bridge.ModuleHolder: void destroy()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: ReaLayoutAnimator(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.UIConstantsProviderManager: UIConstantsProviderManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.uimanager.UIConstantsProviderManager$DefaultEventTypesProvider,com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsForViewManagerProvider,com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsProvider)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.BV.LinearGradient.LinearGradientManager: void setAngle(com.BV.LinearGradient.LinearGradientView,float)
com.facebook.common.time.MonotonicClock: long now()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String,int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.modules.devloading.DevLoadingModule: DevLoadingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeDropAncestors(android.view.View)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.lang.String getFabricComponentName(java.lang.String)
com.facebook.react.fabric.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomLeftRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.BV.LinearGradient.LinearGradientManager: void setStartPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void scheduleMountItemOnViewAttach(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.facebook.react.fabric.BindingImpl: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
org.pgsqlite.SQLitePlugin: android.content.Context getContext()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.BV.LinearGradient.LinearGradientView: void setStartPoint(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.BV.LinearGradient.LinearGradientView: void setEndPoint(com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.facebook.react.bridge.UIManagerProvider: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.BV.LinearGradient.LinearGradientManager: void setEndPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void setModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.uimanager.UIConstantsProviderManager$ConstantsForViewManagerProvider: com.facebook.react.bridge.NativeMap getConstantsForViewManager(java.lang.String)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$2()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String getName()
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionStart()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String getName()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderBottomRightRadius()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.facebook.react.runtime.ReactInstance: void installGlobals(boolean)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.runtime.JSTimerExecutor: JSTimerExecutor(com.facebook.jni.HybridData)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManagerProviderImpl: FabricUIManagerProviderImpl(com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig,com.facebook.react.uimanager.ViewManagerRegistry)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String getName()
com.reactnativecommunity.netinfo.NetInfoModule: void removeListeners(java.lang.Integer)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
org.pgsqlite.SQLitePlugin: void backgroundExecuteSqlBatch(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
